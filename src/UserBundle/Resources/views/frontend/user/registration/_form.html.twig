{{ form_start(form, {
    'action': path('registration'),
    'method': 'post',
    'attr': {
        'class': '',
        'novalidate': 'novalidate',
    }
}) }}

{{ form_label(form.email, null, {
    'label_attr': {'class': ''}
}) }}

{{ form_widget(form.email, {
    'attr': {
        'class': '',
        'data-field-type': 'email',
        'data-error': 'user.email.invalid'|trans([], 'UserValidators'),
    }
}) }}

 {% if form_errors(form.email) is not empty %}
     {{ form_errors(form.email) }}
 {% endif %}

{{ form_label(form.plainPassword.first, null, {
    'label_attr': {'class': ''}
}) }}

{{ form_widget(form.plainPassword.first, {
    'attr': {
        'class': '',
        'data-field-type': 'password',
        'data-error': "user.password.min"|trans({'limit': 6}, "UserValidators"),
    }
}) }}

{% if form_errors(form.plainPassword.first) is not empty %}
    {{ form_errors(form.plainPassword.first) }}
{% endif %}

{{ form_label(form.plainPassword.second, null, {
    'label_attr': {'class': ''}
}) }}

{{ form_widget(form.plainPassword.second, {
    'attr': {
        'class': '',
        'data-field-type': 'password',
        "data-equals-to": form.plainPassword.first.vars.id,
        'data-error': "user.password.min"|trans({'limit': 6}, "UserValidators"),
        'data-equals-error': "user.plainPassword.mismatch"|trans({'limit': 6}, "UserValidators")
    }
}) }}

{% if form_errors(form.plainPassword.second) is not empty %}
    {{ form_errors(form.plainPassword.second) }}
{% endif %}

<button>
    {{ 'sign_up'|trans([], 'site') }}
</button>

{{ form_row(form._token) }}
{{ form_end(form) }}